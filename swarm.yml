version: '3'

services:

  caddy:
    image: younesious/micro-service-caddy:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - "80:80"
      - "444:443"
  
  front-end:
   image: younesious/front-end-service:1.0.3
   deploy:
     mode: replicated
     replicas: 1
   environment:
     BROKER_URL: "http://backend"

  broker-service:
   image: younesious/broker-service:1.0.0
   deploy:
     mode: replicated
     replicas: 1

  listener-service:
   image: younesious/listener-service:1.0.0
   deploy:
     mode: replicated
     replicas: 1

  authentication-service:
   image: younesious/authentication-service:1.0.0
   deploy:
     mode: replicated
     replicas: 1
   environment:
     DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
   image: younesious/logger-service:1.0.0
   deploy:
     mode: replicated
     replicas: 1

  mail-service:
   image: younesious/mail-service:1.0.0
   deploy:
     mode: replicated
     replicas: 1
   environment:
     MAIL_DOMAIN: localhost
     MAIL_HOST: mailhog
     MAIL_PORT: 1025
     MAIL_ENCRYPTION: none
     MAIL_USERNAME: ""
     MAIL_PASSWORD: ""
     FROM_NAME: "Younes Mahmoudi"
     FROM_ADDRESS: younesious80@gmail.com

  rabbitmq:
   image: 'rabbitmq:3-management'
   deploy:
     mode: global
   volumes:
     - ./db-data/rabbitmq/:/var/lib/rabbitmq/

  mailhog:
   image: 'mailhog/mailhog:latest'
   ports:
     - "8025:8025"
   deploy:
     mode: global

  mongo:
   image: 'mongo:4.2.17-bionic'
   ports:
     - "27017:27017"
   deploy:
     mode: global
   environment:
     MONGO_INITDB_DATABASE: logs
     MONGO_INITDB_ROOT_USERNAME: admin
     MONGO_INITDB_ROOT_PASSWORD: password
   volumes:
     - ./db-data/mongo/:/data/db

  postgres:
   image: 'postgres:14.2'
   ports:
     - "5432:5432"
   deploy:
     mode: replicated
     replicas: 1
   environment:
     POSTGRES_USER: postgres
     POSTGRES_PASSWORD: password
     POSTGRES_DB: users
   volumes:
     - ./db-data/postgres/:/var/lib/postgresql/data/

volumes:
  caddy_data:
    external: true
  caddy_config:
